@using TheMall.Data.Modles
@using TheMall.Pages;
@using TheMall.Data;

@inject ISessionManager sManager;


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TheMall</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>
            </NavLink>
        </div>
        @if (routeData.PageType != typeof(View) && routeData.PageType != typeof(Create))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login
            </NavLink>
        </div>
        }
        @if (routeData.PageType == typeof(View) || routeData.PageType == typeof(Create))
        {
            <div>
                <MallSelector />
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="create">
                    <span class="oi oi-brush" aria-hidden="true"></span> Opret kort
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="view">
                    <span class="oi oi-map" aria-hidden="true"></span> Vis / Slet kort
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="#">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [CascadingParameter] private RouteData routeData { get; set; } = default!;

    protected override void OnInitialized()
    {
        if (routeData is null)
            throw new NullReferenceException("No Cascaded RouteData - You must cascade RouteData in App");
    }


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
