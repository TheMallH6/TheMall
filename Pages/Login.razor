@page "/login"

@using System.Text;
@using TheMall.Data
@using Microsoft.AspNetCore.Cryptography.KeyDerivation;
@using System.Security.Cryptography;

@inject AppState AppState
@inject NavigationManager NavManager
@inject HttpClient client

<EditForm Model="@Model" OnValidSubmit="@HandleValidLogin" OnInvalidSubmit="@HandleInvalidLogin">
 
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Brugernavn: </label>
        <InputText Id="name" Class="form-control formLog" @bind-Value="@Model.UserName"></InputText>
        <ValidationMessage For="@(() => Model.UserName)" />
    </div>
    <br />
    <div class="form-group">
        <label for="pass">Kodeord: </label>
        <InputText Id="pass" type="password" Class="form-control formLog" @bind-Value="@Model.Password"></InputText>
        <ValidationMessage For="@(() => Model.Password)" />
    </div>
    <br />
    <button type="submit">Login</button>
    <div class="customTextColor">@StatusMessage</div>

</EditForm>

@code
{
    private string StatusMessage = " ";

    private FirmUser Model = new FirmUser();

    protected async Task HandleValidLogin()
    {
        StatusMessage = "Vi tjekker lige dit login...";

        string? upassword = Model.Password;

        var sha256 = SHA256.Create();
        
        string hashedPassWord = BitConverter.ToString(sha256.ComputeHash(Encoding.UTF8.GetBytes(upassword))).Replace("-", "");
 
        var result = await client.PostAsJsonAsync<object>($"https://localhost:7032/Validate/Login?uname={Model.UserName}&password={hashedPassWord}", null);
        await OnInitializedAsync();


   if (Model.Role != null && Model.SessionKey != null && Model.FirmID < 0)
        {

            // Setting objects before navigating
            AppState.FuName = new FirmUser { UserName = Model.UserName };
            AppState.FuRole = new FirmUser { Role = Model.Role };
            AppState.FuFId = new FirmUser { FirmID = Model.FirmID };

            // Navigate to another page
            NavManager.NavigateTo("/create");
        }
        else
        {
            StatusMessage = "Ingen Adgang";
        } 
    }

    protected void HandleInvalidLogin()
    {
        StatusMessage = "Noget gik galt...";
    }
}

